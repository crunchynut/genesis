
<project name="genesis-build-resources-ext">
  
  <!-- Define the rpm macro -->
    <macrodef name="rpmspec">
        <attribute name="workdir" />
        <attribute name="Summary" />
        <attribute name="Name" />
        <attribute name="Version" />
        <attribute name="Release" />
        <attribute name="License" default="GPL" />
        <attribute name="Group" default="application" />
        <attribute name="description"/>
        <attribute name="prep"/>
        <attribute name="setup"/>
        <attribute name="build" />
        <attribute name="install" />
        <attribute name="files" />
        <attribute name="defattr" />                              
        <sequential>
      <!-- Make the packaging directory -->
            <mkdir dir="@{workdir}" />
      <!-- Write out the pkginfo file -->
            <echo file="@{workdir}/rpmspec" append="false" message="Summary: @{Summary}${line.separator}" />
            <echo file="@{workdir}/rpmspec" append="true"  message="Name: @{Name}${line.separator}" />
            <echo file="@{workdir}/rpmspec" append="true"  message="Version: @{Version}${line.separator}" />
            <echo file="@{workdir}/rpmspec" append="true"  message="Release: @{Release}${line.separator}" />
            <echo file="@{workdir}/rpmspec" append="true"  message="License: @{License}${line.separator}" />
            <echo file="@{workdir}/rpmspec" append="true"  message="Group: @{Group}${line.separator}" />
            <echo file="@{workdir}/rpmspec" append="true"  message="description: @{description}${line.separator}" />
            <echo file="@{workdir}/rpmspec" append="true"  message="prep: @{prep}${line.separator}" />
            <echo file="@{workdir}/rpmspec" append="true"  message="setup: @{setup}${line.separator}" />
            <echo file="@{workdir}/rpmspec" append="true"  message="build: @{build}${line.separator}" />
            <echo file="@{workdir}/rpmspec" append="true"  message="install: @{install}${line.separator}" />
            <echo file="@{workdir}/rpmspec" append="true"  message="files: @{files}${line.separator}" />
            <echo file="@{workdir}/rpmspec" append="true"  message="defattr: @{build}${line.separator}" />                                    
        </sequential>
        
    </macrodef> 
    <!-- Define the rpm build macro -->
      <macrodef name="rpmbuild">
          <attribute name="workdir" />
          <attribute name="pkgname" />
          <attribute name="name" />
          <sequential>
              <exec dir="@{workdir}" executable="pkgmk">
                  <arg line="-o " />
              </exec>
              <exec executable="rpm">
                  <arg line="-ba /usr/local/src/rpm/SOURCES @{workdir}/@{pkgname}.pkg @{name}" />
              </exec>
        <!-- Clean up -->
              <delete dir="/var/spool/pkg/@{name}" />
          </sequential>
      </macrodef>    

  <!-- Define the solaris pkginfo macro -->
    <macrodef name="pkginfo">
        <attribute name="workdir" />
        <attribute name="name" />
        <attribute name="longname" />
        <attribute name="version" />
        <attribute name="architecture" />
        <attribute name="classes" default="none" />
        <attribute name="category" default="application" />
        <attribute name="vendor"/>
        <attribute name="pstamp"/>
        <attribute name="email"/>
        <attribute name="basedir" />
        <sequential>
      <!-- Make the packaging directory -->
            <mkdir dir="@{workdir}" />
      <!-- Write out the pkginfo file -->
            <echo file="@{workdir}/pkginfo" append="false" message="PKG=@{name}${line.separator}" />
            <echo file="@{workdir}/pkginfo" append="true"  message="NAME=@{longname}${line.separator}" />
            <echo file="@{workdir}/pkginfo" append="true"  message="VERSION=@{version}${line.separator}" />
            <echo file="@{workdir}/pkginfo" append="true"  message="ARCH=@{architecture}${line.separator}" />
            <echo file="@{workdir}/pkginfo" append="true"  message="CLASSES=@{classes}${line.separator}" />
            <echo file="@{workdir}/pkginfo" append="true"  message="CATEGORY=@{category}${line.separator}" />
            <echo file="@{workdir}/pkginfo" append="true"  message="VENDOR=@{vendor}${line.separator}" />
            <echo file="@{workdir}/pkginfo" append="true"  message="PSTAMP=@{pstamp}${line.separator}" />
            <echo file="@{workdir}/pkginfo" append="true"  message="EMAIL=@{email}${line.separator}" />
            <echo file="@{workdir}/pkginfo" append="true"  message="BASEDIR=@{basedir}${line.separator}" />
        </sequential>
    </macrodef>

  <!-- Define the solaris pkgproto macro -->
    <macrodef name="pkgproto">
        <attribute name="srcdir" />
        <attribute name="workdir" />
        <attribute name="pkginstallbase" default="/"/>
        <sequential>
      <!-- Make the packaging directory -->
            <mkdir dir="@{workdir}" />
  
      <!-- Build the base package prototype -->
            <exec dir="@{srcdir}" executable="pkgproto" output="@{workdir}/prototype.base">
                <arg line="@{srcdir}=@{pkginstallbase}" />
            </exec>

      <!-- 
       Since the ownership of the files with be genesis:genesis we
       will need to correct these. Each application build will may also
       need to make it's own changes. 
       -->
            <exec dir="@{workdir}" executable="sed" input="@{workdir}/prototype.base" output="@{workdir}/prototype.root">
                <arg value="s/\/ 0755 genesis genesis/\/ 0755 root root/g" />
            </exec>
            <exec dir="@{workdir}" executable="sed" input="@{workdir}/prototype.root" output="@{workdir}/prototype.home">
                <arg value="s/\/home 0755 genesis genesis/\/home 0755 root root/g" />
            </exec>

       <!-- Append the special package files to the prototype -->
            <echo file="@{workdir}/prototype.home" append="true" message="i pkginfo${line.separator}" />
            <echo file="@{workdir}/prototype.home" append="true" message="i preinstall${line.separator}" />
            <echo file="@{workdir}/prototype.home" append="true" message="i checkinstall${line.separator}" />
            <echo file="@{workdir}/prototype.home" append="true" message="i postinstall${line.separator}" />
        </sequential>
    </macrodef>

  <!-- Define the solaris pkgproto macro -->
    <macrodef name="pkgmk">
        <attribute name="workdir" />
        <attribute name="pkgname" />
        <attribute name="name" />
        <sequential>
            <exec dir="@{workdir}" executable="pkgmk">
                <arg line="-o " />
            </exec>
            <exec executable="pkgtrans">
                <arg line="-s /var/spool/pkg @{workdir}/@{pkgname}.pkg @{name}" />
            </exec>
      <!-- Clean up -->
            <delete dir="/var/spool/pkg/@{name}" />
        </sequential>
    </macrodef>

  <!-- Define the tar macro -->
    <macrodef name="build-tar">
        <attribute name="name" />
        <attribute name="srcdir" />
        <attribute name="workdir" />
        <sequential>
      <!-- Make the packaging directory -->
            <mkdir dir="@{workdir}" />
      
      <!-- Tar up the file -->
            <tar destfile="@{workdir}/@{name}.tar.gz" basedir="@{srcdir}" compression="gzip" />
        </sequential>
    </macrodef>
</project>
