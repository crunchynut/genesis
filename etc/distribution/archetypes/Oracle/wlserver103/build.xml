<!-- 
  Build fragment to be used for instantiating the Oracle archetype.
  
  Required properties:
    basedir: Should point to the current directory.
    build.dir: Should point to the location where generated archetypes should be placed.
    genesis.xml: Should point to the location of the genesis xml file.
    nodename: The name of the node being built.
    nodeid: The fully qualified id (Genesis path) of the node being built.
    envname: The name of the environment being built.
    envid: The fully qualified id of the environment being built.
-->
<project name="build" default="package">
  <!--
    Parameter Validation.
  -->
  <target name="validate-parameters">
    <fail unless="build.dir" message="Must specify the build directory" />
    <fail unless="genesis.xml" message="Must specify the genesis.xml" />
    <fail unless="enterprise_name" message="Must specify an enterprise name" />
    <fail unless="enterprise_id" message="Must specify an enterprise id name" />
    <fail unless="service_name" message="Must specify a service name" />
    <fail unless="service_id" message="Must specify a service id" />
    <fail unless="environment_name" message="Must specify an environment name" />
    <fail unless="environment_id" message="Must specify an environment id" />
    <fail unless="application_name" message="Must specify an application name" />
    <fail unless="application_id" message="Must specify an application id" />
    <fail unless="datacentre_name" message="Must specify a datacentre name" />
    <fail unless="datacentre_id" message="Must specify a datacentre id" />
    <fail unless="rack_name" message="Must specify a rack name" />
    <fail unless="rack_id" message="Must specify a rack id" />
    <fail unless="node_name" message="Must specify a node name" />
    <fail unless="node_id" message="Must specify a node id" />
  </target>  

  <!-- Calculate our derived properties -->
  <target name="calculate-paths" depends="validate-parameters">  
    <property name="node.build.dir" value="${build.dir}/${enterprise_name}/${service_name}/${environment_name}/${datacentre_name}/${rack_name}/${node_name}/${application_name}/" />
    <property name="node.package.dir" value="${build.dir}/${enterprise_name}/${service_name}/${environment_name}/${datacentre_name}/${rack_name}/${node_name}/${application_name}/" />
  </target>

  <target name="build" depends="calculate-paths">
    <!-- Build the filter set that we want -->
    <createfiltersetusingobjects genesisxml="${genesis.xml}" filtersetid="genesis.filter.properties">
      <object type="/Enterprise" name="${enterprise_id}" />
      <object type="/Enterprise/Datacentre" name="${datacentre_id}" />
      <object type="/Enterprise/Datacentre/Rack" name="${rack_id}" />
      <object type="/Enterprise/Datacentre/Rack/Node" name="${node_id}" />
      <object type="/Enterprise/Service" name="${service_id}" />
      <object type="/Enterprise/Service/Environment" name="${environment_id}" />
      <object type="/Enterprise/Service/Environment/Application" name="${application_id}" />
    </createfiltersetusingobjects>
    
    <!-- Copy the base configuration files into place -->
    <mkdir dir="${node.build.dir}" />
    <copy todir="${node.build.dir}">
      <filterset refid="genesis.filter.properties" />

      <!-- Base files -->
      <fileset dir="${basedir}">
        <exclude name="build-MyApplication.xml" />
      </fileset>
    </copy>
  </target>
      <target name="package" depends="build,build-wlserver103-solaris-package,build-wlserver103-rpm-package,build-wlserver103-linux-package,build-wlserver103-windoze-package" />
      
      <echo message="Attempting to determine which os we are running on......." />


        <!-- Builds the wlserver103 Mac OS X rpm package -->
        <target name="build-wlserver103-rpm-package" depends="build,os-check" if="macosx">        
          <echo message="found a mac os x client" />
        </target>
        <!-- Builds the wlserver103 Linux rpm package -->        
        <target name="build-wlserver103-linux-package" depends="build,os-check" if="linux">
          <echo message="found a linux client" />
        </target>        
        <!-- Builds the wlserver103 windoze msi package -->        
        <target name="build-wlserver103-windoze-package" depends="build,os-check" if="windows">
          <echo message="found a windoze client" />
        </target>        
        <!-- Builds the wlserver103 Salaris pkg package -->                
        <target name="build-wlserver103-solaris-package" depends="build,os-check" if="solaris">
          <export name="found a solaris client" />
        <property name="pkgname" 
          value="WebLogicConfiguration.9.2.3.${Global.Server.Architecture.Name}.${Global.Environment.Name}.${Global.Server.PlatformGroup.Name}.${Global.Server.HostName.nodename.Name}"/>  	
        <echo message="${pkgname}"/>
        <pkginfo
          workdir="${server.package.dir}"
          name="WLSConfig-${Global.Environment.Name}-${servername}"
          architecture="${Global.Server.Architecture.Name}"
          longname="WebLogic Server 9.2 Configuration for ${servername}"
          version="9.2"
          vendor="VocaLink"
          pstamp="8thSeptember2008"
          email="middleware.services@vocalink.com"
          basedir="/" />

       <!-- Copy pre, post and checkinstall scripts to the package directory. -->
       <copy todir="${server.package.dir}">
         <fileset dir="${server.weblogic.dir}/bin">
           <include name="pre*"/>
           <include name="post*"/>
           <include name="checkinstall"/>
           <include name="depend"/>
         </fileset>
       </copy>

       <!-- Build the base package prototype -->
       <pkgproto
         srcdir="${server.build.dir}" workdir="${server.package.dir}"
         pkginstallbase="/fs01/app" />

       <!-- weblogic923 specific protoype changes -->
       <exec dir="${server.package.dir}" executable="sed" input="${server.package.dir}/prototype.home" output="${server.package.dir}/prototype.genesis">
         <arg value="s/genesis genesis/bea mwadmin/g" />
  <!--
         <arg value="s/genesis genesis/bea mwadmin/g" />
  -->
       </exec>
       <exec dir="${server.package.dir}" executable="sed" input="${server.package.dir}/prototype.genesis" output="${server.package.dir}/prototype">
           <arg value="s/\/fs01\/app 0755 bea mwadmin/\/fs01\/app 0755 root other/g" />
       </exec>

       <pkgmk
         name="WLSConfig-${Global.Environment.Name}-${servername}"
         workdir="${server.package.dir}"
         pkgname="${pkgname}" />

       <move file="${server.package.dir}/${pkgname}.pkg" todir="${jumpstart.package.dir}"/>

    </target>  
    
    <target name="os-check">
      <condition property="Solaris">
        <os name="SunOS" />
      </condition>
      <condition property="linux">
        <os name="linux"/>
      </condition>
     <condition property="windows">
       <os family="windows"/>
     </condition>
     <condition property="macosx">
       <os name="Mac OS X"/>
     </condition>  
    </target>

    <target name="clean">
      <delete dir="${server.build.dir}" />
    </target>    
</project>